---
import { db } from '../../lib/db';
import { Icon } from 'astro-icon/components';

let items = await db.ingredient.findMany({
  include: {
    ingredientInfo: true,
  },
});
---

<div class="flex flex-col items-center gap-2">
  {
    items.map((i) => (
      <div class="flex w-64 flex-row justify-between gap-4 bg-slate-400 p-4">
        <p class="self-center">{i.ingredientInfo?.name}</p>
        <div class="flex flex-row gap-2 rounded-md border-2 border-solid border-red-400 p-2">
          <div
            id="archive"
            class={`rounded-md border-2 border-solid border-blue-300 p-2 ${i.archived && 'bg-green-300'}`}
            data-id={i.id}
            data-archived={i.archived}>
            <Icon name="mdi:archive" />
          </div>
          <div
            id="delete"
            class="rounded-md border-2 border-solid border-blue-300 p-2"
            data-id={i.id}>
            <Icon name="mdi:trash" />
          </div>
        </div>
      </div>
    ))
  }
</div>

<script>
  let bindings: Record<string, string> = {
    '#archive': '/api/ingredients/archive',
    '#delete': '/api/ingredients/delete',
  };

  for (const id of Object.keys(bindings)) {
    for (const el of document.querySelectorAll(id)!) {
      el.addEventListener('click', async function (this: HTMLDivElement) {
        let res = await (
          await fetch(bindings[id]!, {
            method: 'POST',
            body: JSON.stringify({
              id: this.dataset.id,
              archived: this.hasAttribute('data-archived'),
            }),
          })
        ).json();

        if (res.success) {
          location.reload();
        } else {
          throw new Error(res.error);
        }
      });
    }
  }
</script>
